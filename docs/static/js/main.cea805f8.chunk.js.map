{"version":3,"sources":["types/types.js","components/reducers/notesReducer.js","components/reducers/uiReducers.js","components/store/store.js","components/reducers/authReducer.js","firebase/firebase-config.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","setErrorAction","err","Swal","fire","removeErrorAction","finishLoadingAction","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","collection","get","notesSnap","forEach","snapHijo","push","data","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","e","code","logout","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","LoginScreen","useDispatch","useSelector","formValues","isFormValid","validator","isEmail","length","className","onSubmit","preventDefault","placeholder","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","console","log","key","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","display","files","text","allowOutsideClick","willOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","autoComplete","delete","NothingSelected","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","root","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.cea805f8.chunk.js","sourcesContent":["export const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error', \r\n    uiRemoveError: '[UI] Remove Error' ,\r\n\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[Notes] New Note',\r\n    notesActive: '[Notes] Set Active Note',\r\n    notesLoad: '[Notes] Load Notes',\r\n    notesUpdate: '[Notes] Update Notes',\r\n    notesDelete: '[Notes] Delete Notes',\r\n    notesFileUrl: '[Notes] Updated Image Url',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n}","import { types } from \"../../types/types\";\r\n\r\nconst initialState = {\r\n    notes : [],\r\n    active: null\r\n    // active: {\r\n    //     id: 'fkdgkjgkf',\r\n    //     title: '',\r\n    //     body: '',\r\n    //     imageUrl: '';\r\n    //     date: 123456\r\n    // }\r\n}\r\n\r\n\r\nexport const notesReducer = ( state=initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive :\r\n            return {\r\n                ...state,\r\n                active:{\r\n                    ...action.payload\r\n                }\r\n            }\r\n        \r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdate:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        \r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n        \r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                active: null,\r\n                notes:[]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    \r\n        }\r\n\r\n}","import { types } from \"../../types/types\";\r\n\r\nconst initialState = {\r\n    \r\n    loading: false,\r\n    msgError: null\r\n\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        \r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducers\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore( \r\n    reducers,   \r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    ) \r\n    );","import { types } from \"../../types/types\";\r\n\r\n// {\r\n//     uid: '232k4jk3jk43',\r\n//     name: 'Aldo'\r\n// }\r\n\r\nexport const authReducer = ( state={}, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDxz0iP8X8jlRge2WiYPhBatGyDRQ4vBqk\",\r\n    authDomain: \"practice-react-cb7c0.firebaseapp.com\",\r\n    databaseURL: \"https://practice-react-cb7c0.firebaseio.com\",\r\n    projectId: \"practice-react-cb7c0\",\r\n    storageBucket: \"practice-react-cb7c0.appspot.com\",\r\n    messagingSenderId: \"135763344706\",\r\n    appId: \"1:135763344706:web:a5dde0eeb32a5d6cb7dcdb\"\r\n  };\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import Swal from \"sweetalert2\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const setErrorAction = ( err ) => {\r\n    Swal.fire( 'Error', err, 'error' );\r\n    return ({type: types.uiSetError,\r\n    payload: err})\r\n};\r\n\r\nexport const removeErrorAction = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoadingAction = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoadingAction = () => ({\r\n    type: types.uiFinishLoading\r\n});","\r\n\r\nexport const fileUpload = async( file ) => {\r\n\r\n    const url = `https://api.cloudinary.com/v1_1/dqi7pqfip/image/upload`;\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append( 'upload_preset', 'react-journal' );\r\n    formData.append( 'file', file );\r\n\r\n    try {\r\n        \r\n        const resp = await fetch( url, {\r\n            method: 'POST',\r\n            body: formData\r\n        } );\r\n\r\n        if( resp.ok ){\r\n\r\n            const cloudResp = await resp.json();\r\n\r\n            return cloudResp.secure_url;\r\n\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\";\r\n\r\n\r\nexport const loadNotes = async( uid ) => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        \r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n\r\n    } );\r\n\r\n    // console.log(notes);\r\n\r\n    return notes;\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startNewNote = () => {\r\n\r\n    return async( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add( newNote );\r\n\r\n        dispatch( activeNote( doc.id, newNote ) );\r\n        \r\n        dispatch( addNewNote( doc.id, newNote ) );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async( dispatch ) => {    \r\n\r\n        const notes = await loadNotes( uid );\r\n\r\n        dispatch( setNotes( notes ) );\r\n\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async( dispatch, getState ) => {\r\n        \r\n        const uid = getState().auth.uid;\r\n\r\n        if( !note.url ){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`/${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote( note.id, noteToFirestore ) );\r\n        Swal.fire('Guardado', note.title, 'success');\r\n\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdate,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const activeNote = getState().notes.active;\r\n\r\n        Swal.fire({\r\n            title: 'Subiendo imagen',\r\n            text: 'En breve estará listo',\r\n            allowOutsideClick: false,\r\n            willOpen: () => { Swal.showLoading() }\r\n        });\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ) )\r\n\r\n        Swal.close();\r\n\r\n    }\r\n}\r\n\r\nexport const startDelete = ( id ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        await db.doc(`/${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote( id ) );\r\n\r\n        Swal.fire('Eliminado','Se eliminó la entrada','success');\r\n\r\n    }  \r\n}\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});","import { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { finishLoadingAction, startLoadingAction } from \"./ui\";\r\nimport Swal from \"sweetalert2\";\r\nimport { noteLogout } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return ( dispatch ) => {\r\n\r\n        dispatch( startLoadingAction() );\r\n        \r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then( ({ user }) => {\r\n\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                );\r\n\r\n                dispatch( finishLoadingAction() );\r\n\r\n            } ).catch( e => {\r\n                dispatch( finishLoadingAction() );\r\n                if(e.code==='auth/user-not-found'){\r\n                    Swal.fire( 'Error', 'Correo no registrado.', 'error' );\r\n                }\r\n                if(e.code==='auth/wrong-password'){\r\n                    Swal.fire( 'Error', 'Password incorrecto.', 'error' );                    \r\n                }\r\n            } );\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\r\n    \r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async({ user }) => {\r\n\r\n                await user.updateProfile( { displayName:name } );\r\n\r\n                // console.log(user);\r\n\r\n                dispatch(\r\n                    login( user.id, user.displayName )\r\n                )\r\n\r\n            } ).catch( e => {\r\n                // console.log(e);\r\n                if(e.code==='auth/email-already-in-use'){\r\n                    Swal.fire( 'Error', 'La dirección de correo electrónico ya está siendo utilizada por otra cuenta.', 'error' );\r\n                }               \r\n            } );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            } );\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload:{\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n\r\n        dispatch( noteLogout() );\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { removeErrorAction, setErrorAction } from '../../actions/ui';\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector( state => state.ui )\r\n    \r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'zearb@illegalepizza.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(isFormValid()){\r\n            dispatch( startLoginEmailPassword(email,password) );\r\n        }\r\n\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    const isFormValid = () => {  \r\n        \r\n        if ( !validator.isEmail( email ) ) {\r\n            dispatch( setErrorAction('Email no es válido') )\r\n            return false;\r\n        } else if ( password.length < 5 ) {\r\n            dispatch( setErrorAction('El password debe ser de almenos 6 dígitos') )\r\n            return false\r\n        }\r\n        \r\n        dispatch( removeErrorAction() );\r\n       return true;\r\n    }\r\n     \r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title animate__animated animate__fadeIn\" >Login</h3>\r\n\r\n            <form onSubmit={handleLogin} className=\"animate__animated animate__fadeIn\">\r\n\r\n                <input type=\"text\" placeholder=\"Email\" name=\"email\" className=\"auth__input\" \r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                    />\r\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" className=\"auth__input\"\r\n                     value={password}\r\n                     onChange={handleInputChange}\r\n                     />\r\n                <button type=\"submit\" className=\"btn btn-primary mb-5 btn-block\"\r\n                     disabled={loading}\r\n                > \r\n                Login\r\n                </button>\r\n\r\n                <hr/>\r\n\r\n                <div className=\"auth__social-networks\">\r\n\r\n                    <p>Iniciar sesión con:  </p>\r\n\r\n                    <div className=\"google-btn\" onClick={handleGoogleLogin} >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <Link to=\"/auth/register\" className=\"link\">\r\n                    Crear cuenta\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch} from 'react-redux';\r\nimport validator from 'validator';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { setErrorAction, removeErrorAction } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    // const { msgError } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: 'Aldo',\r\n        email: 'aldora.ez@gmail.com',\r\n        password: '123456',\r\n        password2: '123456',\r\n    });\r\n\r\n    const { name ,email ,password ,password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( isFormValid() ) {\r\n            dispatch( startRegisterWithEmailPasswordName(email, password, name) );\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {  \r\n        \r\n        if ( name.trim().length === 0 ) {\r\n            dispatch( setErrorAction('Campo nombre obligatorio') );\r\n            return false;\r\n        } else if ( !validator.isEmail( email ) ) {\r\n            dispatch( setErrorAction('Email no es válido') )\r\n            return false;\r\n        } else if ( password !== password2 || password.length < 5 ) {\r\n            dispatch( setErrorAction('Los password tienen que ser iguales y de almenos 6 dígitos') )\r\n            return false\r\n        }\r\n        \r\n        dispatch( removeErrorAction() );\r\n       return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title animate__animated animate__fadeIn\" >Register</h3>\r\n\r\n            <form onSubmit={handleRegister} className=\"animate__animated animate__fadeIn\">\r\n\r\n                <input type=\"text\" placeholder=\"Nombre\" name=\"name\" className=\"auth__input\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input type=\"text\" placeholder=\"Email\" name=\"email\" className=\"auth__input\" \r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input type=\"password\" placeholder=\"Confirmar Password\" name=\"confirm-password\" className=\"auth__input\" \r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button type=\"submit\" className=\"btn btn-primary mb-5 mb-5 btn-block\"> Register </button>\r\n\r\n\r\n                <Link to=\"/auth/login\" className=\"link mt-5\">\r\n                    Ya está registrado?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={ LoginScreen }\r\n                    />      \r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={ RegisterScreen }\r\n                    />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n    \n    const noteDate = moment( date );\n\n    const dispatch = useDispatch();\n\n    const handleEntryClick = () => {\n\n        dispatch( activeNote( id, {\n            id,\n            date,\n            title,\n            body,\n            url\n        } ) );\n\n    }\n\n    return (\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn\" onClick={handleEntryClick}>\n            \n            {   \n                url &&\n                (<div \n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${url})`\n                    }}\n                ></div>)\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                   {title}\n                </p>\n                <p className=\"journal__entry-content\">\n                    {body}\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span> { noteDate.format('dddd') } </span>\n                <h4> { noteDate.format('Do') } </h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector( state => state.notes );\n    console.log(notes);\n    return (\n        <div className=\"journal__entries animate__animated animate__fadeIn animate__faster\">\n            \n            {   \n                notes.map( note => (\n                    <JournalEntry key={ note.id } {...note} />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n\n    const {name} = useSelector( state => state.auth );\n    \n    const handleLogout = () => {\n        \n        dispatch( startLogout() );\n\n    }\n\n    const handleAddNew = () => {\n\n        dispatch( startNewNote() );\n\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> {name} </span>\n                </h3>\n\n                <button className=\"btn\" onClick={handleLogout}>\n                    Logout\n                </button>\n            </div>\n\n            <div className=\"journal__new-entry\" onClick={ handleAddNew }>\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    Nueva entrada\n                </p>\n            </div>\n\n            <JournalEntries />    \n\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n\n    const { active } = useSelector( state => state.notes );\n\n    const handleSave = () => {\n\n        dispatch( startSaveNote( active ) );\n\n    }\n\n    const handleUploadImage = () => {\n        \n        document.querySelector('#fileSelector').click();\n\n    }\n\n    const handleFileChange = (e) => {\n        \n        const file = e.target.files[0];\n\n        if(file){\n\n            dispatch( startUploading( file ) );\n\n        }\n\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>15 de Octubre 2020</span>\n\n\n            <input \n                id=\"fileSelector\"\n                type=\"file\"\n                style={{ display: 'none' }}\n                onChange={handleFileChange}\n            />\n\n            <div>\n                <button className=\"btn\" onClick={handleUploadImage} >\n                    Imagen\n                </button>\n\n                <button className=\"btn\" onClick={ handleSave }>\n                    Guardar\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useRef } from 'react'\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { activeNote, startDelete } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { active: note } = useSelector( state => state.notes );\n\n    const [ formValues, handleInputChange, reset ] = useForm( note );\n    // console.log(formValues);\n    const { body, title } = formValues;\n\n    const activeId = useRef( note.id );\n\n    useEffect( () => {\n\n        if( note.id !== activeId.current ){\n            reset();\n            activeId.current = note.id;\n        }\n\n    }, [ note, reset ] );\n\n    useEffect( () => {\n\n        dispatch( activeNote( formValues.id, {...formValues} ) );\n\n    }, [formValues, dispatch] );\n\n    const handleDelete = () => {\n\n        dispatch( startDelete( note.id ) )\n\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Escribe algún título\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={title}\n                    onChange={handleInputChange}\n                />\n\n                <textarea\n                    name=\"body\"\n                    placeholder=\"Qué tareas hay para hoy?\"\n                    className=\"notes__textarea\"\n                    value={body}\n                    onChange={handleInputChange}\n                ></textarea>\n                \n                {   \n                    (note.url)\n                     &&\n                    (<div className=\"notes__image\">\n                        <img \n                            src={note.url}\n                            alt=\"imagen\"\n                        />\n                    </div>)\n                }\n\n\n            </div>\n\n            <button className=\"btn btn-danger\"\n                onClick={handleDelete}\n            >\n                Delete\n            </button>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Seleccione algo\n                <br />\n                o cree una entrada\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { useSelector } from 'react-redux';\nimport { NothingSelected } from './NothingSelected';\n// import { NothingSelected } from './NothingSelected';\n\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector( state => state.notes );\n\n    return (\n        <div className=\"journal__main-content animate__animated animate__fadeIn\">\n            \n            <Sidebar />\n\n\n            <main>\n                {\n                    active ?\n                    <NoteScreen /> :\n                    <NothingSelected />\n                }\n\n            </main>\n\n\n        </div>\n    )\n}\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component {...props} /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            ) }\r\n        />\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component {...props} /> )\r\n            ) }\r\n        />\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { useState } from 'react';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [ checking, setChecking ] = useState(true);\r\n\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n            \r\n            if( user?.uid ){\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn(true);\r\n                \r\n                dispatch( startLoadingNotes( user.uid ) );\r\n\r\n            }else{\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        } );\r\n\r\n    }, [ dispatch, setChecking, setIsLoggedIn ])\r\n\r\n    if( checking ){\r\n        return(\r\n            <h1>Cargando...</h1>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={ AuthRouter }\r\n                        isAuthenticated={ isLoggedIn } \r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        isAuthenticated={ isLoggedIn }\r\n                        path=\"/\"\r\n                        component={ JournalScreen }\r\n                    />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './components/store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\nconst root = document.getElementById('root');\n\nReactDOM.render( <JournalApp/>, root );\n"],"sourceRoot":""}